version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@6.4.0
  aws-ecs: circleci/aws-ecs@0.0.11

jobs:
  test:
    docker:
      - image: circleci/openjdk:stretch
    steps:
      - checkout
      - run : ./mvnw test
      - store_artifacts:
          path:  target

  build:
    docker:
      - image: circleci/openjdk:stretch
    steps:
      - checkout
      - run: ./mvnw -Dmaven.test.skip=true -Dmaven.javadoc.skip=true package

  analyse:
    docker:
      - image: circleci/openjdk:stretch
    steps:
      - checkout
      - run:
          name: Analyze on SonarCloud
          command: ./mvnw verify sonar:sonar -Pcoverage

  deploy:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Setup common environment variables
          command: |
            echo 'export ECR_REPOSITORY_NAME="${AWS_RESOURCE_NAME_PREFIX}"' >> $BASH_ENV
            echo 'export FULL_IMAGE_NAME="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${ECR_REPOSITORY_NAME}:latest"' >> $BASH_ENV
      - run:
          name: Install dependencies for AWS
          command: |
            sudo apt-get update
            sudo apt-get -y -qq install awscli
            sudo apt-get install python3-pip
            sudo pip3 install --upgrade awscli
      - run:
          name: Build image
          command: |
            docker build -t $FULL_IMAGE_NAME .
      - run:
          name: Push image
          command: |
            eval $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
            docker push $FULL_IMAGE_NAME

  update:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - run:
          name: Install dependencies for AWS
          command: |
            sudo apt-get update
            sudo apt-get -y -qq install awscli
            sudo apt-get install python3-pip
            sudo pip3 install --upgrade awscli
      - run:
          name: Force Update Existing Service
          command: |
            aws ecs update-service --cluster ecs-cluster --service circleci-ecs-service --region ${AWS_DEFAULT_REGION} --force-new-deployment

#  aws-ecs/deploy-service-update:
#      steps:
#        - checkout
#      requires:
#        - aws-ecr/build-and-push-image # only run this job once aws-ecr/build-and-push-image has completed
#      family: "${AWS_RESOURCE_NAME_PREFIX}-service"
#      cluster-name: "${AWS_RESOURCE_NAME_PREFIX}-cluster"
#      container-image-name-updates: "container=${AWS_RESOURCE_NAME_PREFIX}-service,tag=${CIRCLE_SHA1}"


workflows:
  build-then-deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - analyse:
          context: SonarCloud
          requires:
            - test
      - deploy:
          context: AWS
          requires:
            - analyse
      - update:
          context: AWS
          requires:
            - deploy
#        - aws-ecs/deploy-service-update:
#          context: AWS
